
// The goal is to write 90% of your custom styles HERE
// $variables will of course be changed, but things like mixins should become robust enough
// Any mixins that are not used will be ignored on output, so no reason to worry about size
// Just use what you like. : )


// $global
body
  background: $color
  color: $black
p
  standard-type()

// $structure
.inner-w
  max-width: $inner-w-width
  margin: 0 auto // horizontal center
  padding: $pad
  dev-outline($color)

// $header
.app-header
  background: $white
  h1
    large-type()

.main-menu
  //
  .menu
    //
    li
      display: inline-block
    a
      display: block
      padding: $pad*.5 $pad $pad*.5 0  

// $content
.content
  background: $gray-light
  color: $gray-dark
  h1
    extra-large-type()
  h2
    large-type()
  p
    //

// $footer
.app-footer
  background: $color
  color: $white

.ember-load-indicator
  fixed-translate-center()

.spinner {
  width: 40px;
  height: 40px;
  background-color: #333;

  margin: 100px auto;
  -webkit-animation: sk-rotateplane 1.2s infinite ease-in-out;
  animation: sk-rotateplane 1.2s infinite ease-in-out;
}

@-webkit-keyframes sk-rotateplane {
  0% { -webkit-transform: perspective(120px) }
  50% { -webkit-transform: perspective(120px) rotateY(180deg) }
  100% { -webkit-transform: perspective(120px) rotateY(180deg)  rotateX(180deg) }
}

@keyframes sk-rotateplane {
  0% { 
    transform: perspective(120px) rotateX(0deg) rotateY(0deg);
    -webkit-transform: perspective(120px) rotateX(0deg) rotateY(0deg) 
  } 50% { 
    transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);
    -webkit-transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg) 
  } 100% { 
    transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
    -webkit-transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
  }
}
